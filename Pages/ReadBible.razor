@page "/lerbiblia/{abbrev}/{Name}"
@using APIBible.Data
@inject NavigationManager navigationManager
<PageTitle>Biblia Online</PageTitle>

@if (errorMessage == null)
{
    <style>
        .selected {
            color: red;
        }
    </style>

    <a class="back-arrow" @onclick="GoBack">
        <i class="oi oi-arrow-left"></i> <!-- Adicione o ícone de seta aqui, usando uma biblioteca de ícones como o Font Awesome -->
</a>

    <h2 class="title">@Name</h2>
    <ul class="chapter-list">
        @for (int i = 1; i <= (int)model.Chapters; i++)
        {
            int chapter = i;
            <li class="chapter-item @(selectedChapter == chapter ? "selected" : "")" @onclick="(() => OnSelectChange(chapter))">@chapter </li>
        }
    </ul>
    <br />

    @if (isLoading)
    {
        <p>Aguardando...</p>
    }
    else
    {
        @foreach (var verse in scripture.verses)
        {
            <p>v.@verse.Number: @verse.Text</p>
        }
    }
}
else
{
    <p>Erro - @errorMessage.ToString()</p>
}

@code {
    private FindBooks model;
    private Scripture scripture;
    private bool isLoading = true;
    private string errorMessage;
    private int selectedChapter;
    private string lastPageUrl;

    [Parameter]
    public string abbrev { get; set; }
    [Parameter]
    public string Name { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            var bibleAPIService = new BibleAPIService(new HttpClient());
            model = bibleAPIService.GetChapter(abbrev);
            isLoading = false;
            lastPageUrl = navigationManager.Uri;
            OnSelectChange();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            isLoading = false;
        }
    }
    private void OnSelectChange(int i = 0)
    {
        var bibleAPIService = new BibleAPIService(new HttpClient());
        if (i == 0)
        {
            i = 1;
            scripture = bibleAPIService.GetScripture(abbrev, i.ToString());
        }
        else
        {
            scripture = bibleAPIService.GetScripture(abbrev, i.ToString());
        }
        isLoading = false;
        selectedChapter = i;
    }
    private void GoBack()
    {
        navigationManager.NavigateTo("/biblia/");
    }

}
